spring:
#  thymeleaf:
#    cache: false
#    prefix: classpath:/templates/
#    suffix: .html
#    encoding: UTF-8
#    mode: HTML5
#    servlet:
#      content-type: text/html
#  resources:
#    static-locations: classpath:/
  datasource:
    url: jdbc:mysql://192.168.80.128:3306/yang?useSSL=false&useUnicode=true&characterEncoding=utf-8
    username: ryzeyang
    password: yang1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  quartz:
    jdbc:
#      这里有 三个选项 always（每次都帮你创建表） never(自己手动建表) embedded 默认的
      initialize-schema: always
    #持久化到数据库方式
    job-store-type: jdbc
    properties:
      org:
        quartz:
          scheduler:
            instanceName: MysqlScheduler
            instanceId: AUTO
            startupDelay: 10
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            tablePrefix: QRTZ_
            isClustered: true
            clusterCheckinInterval: 10000
            useProperties: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            #线程数 一个任务使用一个线程
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
#  MyBatis Mapper 所对应的 XML 文件位置，如果您在 Mapper 中有自定义方法(XML 中有自定义实现)，需要进行该配置，
#  告诉 Mapper 所对应的 XML 文件位置
  mapper-locations: classpath:mapper/*.xml
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      # 主键类型,大小写不敏感 AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID"
      id-type: auto
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl